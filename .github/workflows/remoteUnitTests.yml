name: remote unit tests

on: 
  pull_request:
    branches:
      - "master"
      - "candidate-*"

jobs:
  test-against-platform:
    runs-on: ubuntu-latest

    services:
      hpccsystems-platform:
        image: hpccsystemslegacy/platform
        ports:
          - 8510:8510
          - 8010:8010

    steps:
      
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Rebase
      run: |
        git rebase origin/${{ github.event.pull_request.base.ref }}
        git log --pretty=one -n 15

    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Fetch hpccsystems-platform docker container name
      run: |
        echo "PLATFORM_CONTAINER_NAME=$(docker ps --format \"{{.Names}}\")"  >> $GITHUB_ENV

    - name: Get HPCCSystems Platform version
      run: |
        docker exec ${{ env.PLATFORM_CONTAINER_NAME }} cat /etc/HPCCSystems/version

    - name: HPCCSystems Startup
      run: |
        docker exec ${{ env.PLATFORM_CONTAINER_NAME }} /etc/init.d/hpcc-init start
    
    - name: HPCCSystems Certificate Setup
      run: |
        docker exec ${{ env.PLATFORM_CONTAINER_NAME }} /opt/HPCCSystems/etc/init.d/distributePKI

    - name: HPCCSystems Datafile Setup
      run: |
        wget -q https://raw.githubusercontent.com/hpcc-systems/hpcc4j/master/wsclient/src/test/resources/generatedata.sh
        chmod +x generatedata.sh
        docker cp generatedata.sh ${{ env.PLATFORM_CONTAINER_NAME }}:/home/hpcc/generatedata.sh
        docker exec ${{ env.PLATFORM_CONTAINER_NAME }} /home/hpcc/generatedata.sh
    
    # speed things up with caching from https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven
    - name: Cashe Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
  
    - name: Build with Maven
      run: mvn -B --activate-profiles jenkins-on-demand -Dmaven.gpg.skip=true -Dmaven.javadoc.skip=true -Dmaven.test.failure.ignore=false install
